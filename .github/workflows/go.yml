name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      version_tag: ${{ steps.determine_version.outputs.version_tag }}

    steps:
      # Check out the code from your repository
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'  # or your desired Go version

      # Cache Go modules for faster builds (optional but recommended)
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Check code formatting
      - name: Check Go formatting
        run: gofmt -l .
        
      - name: Build
        run: go build

      # Run E2E tests
      - name: Run E2E Tests
        run: go test ./tests/... ./commands/...
        
      - name: Determine Next Version
        id: determine_version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          branch: main    

      - name: Tag and Release
        id: tag_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = "${{ steps.determine_version.outputs.version_tag }}";
            const releaseName = `Release ${tagName}`;
            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: releaseName,
              draft: false,
              prerelease: false,
            });
            
  smoke:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Check out the code from your repository
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'  # or your desired Go version

      # Cache Go modules for faster builds (optional but recommended)
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Build the application
      - name: Install
        run: go install github.com/wcatron/query-projects@${{ needs.build.outputs.version_tag }}

      - name: Run
        run: |
            export PATH="${PATH}:$(go env GOPATH)/bin"
            cd example
            query-projects info
